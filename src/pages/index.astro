---
import BaseLayout from '../layouts/base.astro'

import {bones} from '../data/bones.js'
import {findToday, shortDesc} from '../lib/bone-utils.js'
import {Calendar} from '../lib/calendar.js';
import {CivilDate} from '../lib/civil-date.js';
import {DayData} from '../lib/bones.js'
import BoneDay from '../components/BoneDay.astro'
import Year from '../components/Year.astro'


let title = 'Is it a Bones Day?';
const data = bones;
const recent = findToday(data.allTime);

const today = CivilDate.today();
const oldest = bones.allTime[bones.allTime.length - 1].date;
const calendar = new Calendar(oldest, today);

const forecastMap = new Map<string, DayData>(bones.allTime.map(d => [d.date.asIsoString(), d] as const));
---
<BaseLayout title={title} description="Is today a Bones Day? Check the latest forecast to find out!">
    <main>
        <header>
            <h1>Is today a Bones Day?</h1>
            {
                'today' in recent ?
                    <BoneDay day={recent.today} /> :
                    <div class="no-recent">
                        <div>We don&apos;t have a forecast yet, but the most recent forecast was</div>
                        <BoneDay day={recent.mostRecent} />
                    </div>
            }
        </header>

    </main>
    <aside>
        <h2>Recent Forecasts (<a href="/list">list</a>)</h2>
        <div class='forecasts'>
        {
            data.allTime.slice(0, 7).map(day => <div>
            <span>{day.date.asIsoString()}</span><span>{shortDesc(day)}</span>
            </div>)
        }
        </div>
    </aside>
    <aside>
        <h2><a href="/calendar">Calendar</a></h2>
        {
            calendar.getRecent().map(year => <Year year={year} forecasts={forecastMap} />)
        }
    </aside>
</BaseLayout>
